////////////////////
2014.09.13
I2Cバスコンのレジスタマップをlibre officeで作ってたらクラッシュして飛んだ．
自動保存から復元できたけど15分単位だったから最後の5分ぐらいは消えた．
こういうのでモチベーションが下がるのは何とかならないものか．．．
-
I2Cはとりあえず一番シンプルな割り込みなしのバイトモードで使ってみよう．
必要に応じて変更する．
データシート英語だし設定少し複雑そうだから難航しそうな予感

////////////////////
2014.09.12
結局UART専用アプリじゃなきゃUARTの通信はできないっぽい？
サポートにメールしたら
	標準アプリじゃUART通信できない？
		→手持ちのUART専用アプリだとできてるけど，，，(意訳)
という謎のやりとりになったからとりあえずTWE-lite r買って書き換えてみよう．
SDKはwindows版のほうが力入れてるっぽいからwindowsでSDK入れて書き込みしよう．
App_UARTを見てから必要に応じて改造．
TWE-Lite Rが届くまではI2Cバスコン側の実装を進める．

////////////////////
2014.09.10
zigbeeに波形入れると出力電圧が1V弱/GNDの波形になる．
zigbeeの設定品をいろいろ試したがどこも問題なく，結局3.6Vが出ていないことがわかった．
探っていくと加速度センサのJ2をショートしていたことで
アドレス設定品が3.6Vになっていて，そこをGNDにするつもりで回路でGNDにしていたから
3.6V-GNDショートになっていた．
多分自分でショートさせたんだろうけど，なぜJ2をショートしたのか覚えていない．
-
とりあえずzigbeeでシリアルを飛ばせるようになってminicomで受けられたっぽいが，
すべて文字化けしているし，10sec間隔でデータを送っているはずなのに，
1sec間隔で文字化けした何かが出る．ボーレート設定が怪しいがzigbee側もminicom側も
問題なさそう．
→TOCOSTICのデフォルトが115200bpsっぽい．
  これを38400bpsにすれば動きそうだけど変え方がわからん．
→結局分解してBPSをGNDショートしたら38400bpsで起動メッセージが出た．
  ただデータが1sec周期で謎の16進数.
  →ボーレートはコマンドで設定できる方法があるっぽい．明日確認しよう．

////////////////////
2014.09.09
熱対策：
コアレスモータと直列にコイルを入れることでリプル電流を抑制し，
発熱を抑えることにする．
16bitタイマの250kHzのPWMだと22uHで許容範囲(暖かい？くらい)に収まりそう．
8bitタイマの31.25kHzだと100uHくらいが良さそう．
22uHはラジアルタイプが秋月にないから47uH[LHL08NB470K]，100uHは[LHL08NB101K]
-
zigbee実装しようとしたら今までSCI0だと思って書いていたものがSCI1だった．
どこで間違えたんだろう．

////////////////////
2014.09.08
PWMでデューティ50%でほぼ静止状態なのにモーター超熱い．
周波数あげたら良くなる？
250kHz->500kHzにしたけど30秒で触れなくなる．
250kHzだと15秒位で限界だからマシにはなるようだ．

////////////////////
2014.09.07
AD変換方法の検討．scan modeに単一と複数を同時取得するモードが有る．
しかし複数ch同時でも0~3,4~7の2回に分ける必要がある．
複数同時は常にスキャンし続けるため電力的には不利．
単一は必要なときに読みに行くためAD変換が終わるのをループで待つため時間的に不利．
以上を踏まえ以下の3案を検討
○案1	スキャンモードで
	0~3ch読み取り後4~7chを設定し完了フラグを待って読み取り
◎案2	単一モードをループで待って全ch読む
△案3	スキャンモードで
	奇数回目の10msタイマー割り込みで0~3chを読み取り
	偶数回目で4~7chを読み取り
案2で時間的に間に合わなければ20msタイマにして時間を伸ばすのが良さそう
また，10bitADだが上位8bit->下位2bitの順で読み出すため，
上位8bitで事足りるならそれだけで良さそう．
精度はそんなにいらないので上位8bitだけ取り出すことにする．
-
ADCのデバイスドライバ実装中．何度やっても0しか出ないと思ったらレジスタ設定の
上位と下位を逆にしていた(ex 0x0f->0xf0)．
AD完了をADFでなくADSTで見ていたのでうまく行かなかったようだ．
直したら測距センサの値が正常に出力された．

////////////////////
2014.09.05
リポバッテリー到着，基板側のコネクタはS3B-XH-Aが良さそう．
ユニバーサル基板上にひと通りのデバイスを載せてデバイスドライバを作る．(0x基板)
モーターと測距センサはとりあえず1chずつ．
意外とユニバーサル基板ってはんだづけしづらいな．．．綺麗に配線できない．
とりあえず配線終了．シリアルから文字列が送られてきてるし3.6Vも出てるから
これからデバイスドライバを実装していく．

////////////////////
2014.09.01
バラックボード実装中．2.54mmピッチのユニバーサル基板に乗せるとかなり面積食う．
モーターと測距センサは動作確認できればいいから1chずつ．
-
やはりネックはプロペラの浮力．
以下のプロペラ15cmと18cmのセットを買って試してみよう．
http://www.rubberpowerplane.com/pg12.html

////////////////////
2014.08.27
部品実装完了．Proボードでソフト動いた．
ここからボード外の回路をテストしていく．
足りないもの
・pinヘッダ2x20
・pinヘッダ1x20?
・pinソケット2x20
・フラックス(0.65ピッチ実装用)
・リポバッテリー2セル
-
PWM実装・AD実装をそろそろ始める

////////////////////
2014.08.24
Proボード届いたけどh8とDRAM以外部品が実装されていない．
Proボードってそういう意味だったのか．とりあえず手持ち部品で実装していこう．
まずはaki-h8_3069fで作ってたソフトをちょい変して少しずつソフトを作っていこうか．

////////////////////
2014.08.23
よく考えたらデバイスドライバの初期化関数は1度動いたら変更しないから
テストいらないのでは？リファクタリングする場合以外は．
いや，異常系のテストしたい場合はいるのか．．．
思ったよりCppUTest使いこなすのに時間かかりそう．
イニシャライズだけ先に実装するか．
...なにか大きな勘違いをしていたかも．CppUTestってh8上で実行できない？
パソコンでコンパイルしてもh8向けのバイナリでテストが成功するとは限らないし，
h8上で関数テスト関数を実装してリリース時にはmakefileで分離できるようにしたらいいかも
ということでとりあえず実装開始してテストがしたくなったら
test関数上で分離できるように実装しよう

////////////////////
2014.08.16
Proボードが届くまで少し時間がかかりそうだからTDDを試してみたい．
[テスト駆動開発による組み込みプログラミング]を試して，
その後テストコードをソースに入れ込む．しばらく開発が停滞する．

////////////////////
2014.08.15
ZigBeeのUARTボーレートは115200bps/38400bps．
h8の設定では115200は誤差が大きすぎるため38400で使用．BRR=19
minicomで数字がバラバラ表示されても意味わからんから
PC側でグラフィカルにログできるツールが必要．
Arduinoのお陰でサンプルコード結構ありそう．Processingって環境で作りやすいらしい．
グラフ表示・数値保存・数値再生・3D表示(加速度・角速度似あわせてモデルを動かす)
-
測距センサは角度分解能が低いから死角が多い．
筐体の正面を決めて最も障害物が近い方に正面を向ける．
動いてれば回転するから死角が減らせる．
-
パラメータって何があるのか具体的に考えてなかったからちょっと考えよう．
・PWM設定値*k=移動加速度or角速度(静的)
	6軸組み合わせ?2^6=64パラ?6パラのベクトル演算で行ける？
・PWM変動値*l=収束時間or単位時間での加速度変動(動的,伝達関数)
	6軸組み合わせ?2^6=64パラ?6パラのベクトル演算で行ける？
・PWMリミット値(モータ保護)
・電流リミット値(モータドライバリセット)
・接近回避しきい値 6軸
-
移動座標をそのまま扱うのは難しそうだから加速度/角速度ベースの制御が良さそう．
ある点からある点へ移動させるには加速度値はsin波を描くようにしなきゃならない．
PWMは定数lの遅れがあるからその分を補正する必要がある．
lは単位時間毎(100ms?)で分割して持ったほうが良さそう．
ちなみに10ms周期で加速度等を観測し100ms周期でPWMを調整する予定
-
イニシャライズコマンドでk,lを自動取得したい．
重力方向によってパラメータが変わりそう？
重力加速度を定数ベクトルとして持っておけばベクトル演算で行ける？
まずはZ軸固定でやって，その後パラメータは考えよう．
-
空間移動は座標->距離->到達時間->sin波(加速度-時間)マッピング
	->100ms間隔でのPWM値マッピング
到達時間は単純な1次関数にはならないので注意が必要
(近距離では遅くなる,遠距離では1次関数に近づく)

////////////////////
2014.08.14
zigbeeのRSTはフローティングで解除されるのか？記述がないけど接続例ではOPEN．要実験
-
バスに抵抗入れて保護するのは抵抗アレイに変更．さすがに多すぎ．
BCN164AB102J7LFなら3216で４素子(1k)．マルツで買える
-
そろそろ部品表作らないと．混乱してきた．
-
inventor fusionで3D図面書いてたらフリーズして書いてたデータ飛んだ．
こまめにセーブしよ．
骨格書き上がったけどモーターとプロペラないとわからんな．

////////////////////
2014.08.13
電源入れた直後はPWM出力できないから電源電圧がモーターにもろにかかる．
ドライバの出力を切れる回路を追加する．
-
電力効率の計測のためにBAT電源電流をモニタしたい．
作動増幅？電流が一定値を超えたらモータ出力を止める？(突然の自由落下)
良さそうなICはある[LT6106CS5](検出0.02Ω-0.2W,入力200Ω,出力10kΩ)
検出抵抗はCRL1206-FU-R020ELF(RSコンポーネンツ3216サイズ)それ以外は1608で適当に
http://akizukidenshi.com/catalog/g/gI-07300/
非常時だけならヒューズを入れればいいか．
リセッタブルヒューズってのがあるらしい．熱で物性が変わって抵抗値が急激に増加する．
http://jp.rs-online.com/web/p/resettable-surface-mount-fuses/6917597/
↑この辺試してみる？7.5x5.5くらい．MF-SM300-2
-
ProボードCN1,CN2の接続はLANボードと全く同じ．さすが秋月わかってる．
-
電源電圧上がったから逆接保護Diいれるか．リークは気にならないからショットキー
[SR54F]
どんどん面積が増えてる気がするけど載せてから考えよう．

////////////////////
2014.08.12
測距センサが5V動作品(4.5~5.5V)だった．なぜ気づかなかったんだろうか．
とりあえず3.7Vで動作確認．
→黒線が5V入力・赤線がGND入力だった．逆接して壊した．死ね．
-
LiPoバッテリ実測4Vちょい出てる．加速度センサの定格が3.9V,動作maxが3.6V．
3.3Vレギュレータかませる?Zigbee,I2Cバスコン,Gyroも3.6まで．
DRAM,NOT回路4.5~5.5
Lipo直列にして6~8Vを5V/3.3Vドロップ．モーターはBatt直結PWMで制限?実力行ける?
多電源だとレベルシフタが必要．電源電圧を極力近づけて直接やり取り．
定格超えるけど実力行ける？1.5kくらい抵抗入れて何とかなるかも．．．
レギュレータ[NJM111000F1]
Batt:	モータドライバ
4.5V:	DRAM，NOT,マイコン,シリアル,測距センサ,モータドライバ(I/F),EEPROM
3.6V:	Zigbee,I2Cバスコン,Gyro,加速度
LiPoは2セルのモジュールが売ってる．充電器とともに購入
http://www.kkhobby.com/SHOP/BT167.html
-
I2Cのアドレスがかぶっていないことを確認
デバイス	I2Cアドレス
加速度センサ	0x53(L)		or 0x1D(H)
Gyroセンサ	0xD5 & 0xD4(L)	or 0xD7 & D6(H)
EEPROM		0x90 & 0x91(LL)	or 0x98 & 0x99(HH)
問題なさそうなのですべてL接続で使う
-
角速度センサはFIFO持ってるけどポーリングで10ms周期でとるからBypassモードで使う
-
プロペラはこれでも良さそう6x4Eは6inchでピッチが4inch
http://www.kkhobby.com/SHOP/PP031.html

////////////////////
2014.08.11
コアレスモータをLiPoバッテリでフル回転させたけど，8cmプロペラ2個で飛べるとは思えない
18cmプロペラで飛べるか確認→ダメならモータ変更
なお，逆回転は問題なし
-
筐体構造検討，手書き図面作成,とりあえず試作してみる
-
アメンボどうやってつけよう

////////////////////
2014.08.09
回路図作成のため部品ライブラリを作成する
		symbol			package
マイコン	h8/3069f		h8/3069f_pro_board
DRAM		M5M417800
マイコンボード	h83069f-pro		基板
モータDr	TB6593			基板
LiPoBatt	LiPoBatt		コネクタ
モータ		MK07-3.3		コネクタ
測距センサ	GP2Y0A21YK		コネクタ
zigbee		TWE-001L-DIC-WA		基板
Gyroセンサ	AE-L3GD20		基板
加速度センサ	ADXL345			基板
シリアル変換	PCA9665PW		基板
EEPROM		24C512			24C512
Not回路		TC74ACT14FT		基板	
-
LANボードとProボードはDRAMのpin配が違うがCPUとのつなぎは同じなので
ソフト変更不要のはず．
クロックは25MHzが標準なのでLANボードでテストするときに付け替えておく
-
プロペラ思ったより小さい．飛びそうにないから以下の15/18/21cmを試す
http://www.rubberpowerplane.com/pg12.html
紙を各デバイス・基板サイズに切って基板サイズ予測->プロペラサイズを感で決める
→最終的には70x70mmに収まりそう．
  そこそこの重さになりそうだからプロペラは18くらいか．
-
UART-シリアル変換は在庫がなさそうだからI2CバスコントローラPCA9665PWを使用
http://www.marutsu.co.jp/ichiran/?SHO=011811
NICと同じ方法でアクセスできそう
-
モータドライバはh8Pro基板の下に実装．SMTを直で(DIP変換基板にしない)．
NOT/I2C/ACCもPro基板の下に入れられそう．
ACCは軸中心に置きたい．Gyroはどこでも．ビス付近の方が振動しなくていい．
Zigbeeアンテナはプロペラと干渉しないように注意

////////////////////
2014.08.06

買い物メモ
■回路
モータドライバ	[【TB6593FNG(O.EL)】ブラシ付きモータドライバIC ]
		[【D020】変換基板(20ピン・SSOP/SOP・5枚) ]
マイコン	[aki-h8/3069FマイコンボードDRAM付 Pro用]
バッテリー	[リチウムポリマーバッテリー3.7Vx1](USB充電可能なもの)
		コネクタ[1.5mm ピッチJSTベース付きピン 2 ピン 10個セット]
測距センサ	[GP2Y0A21YK]_x6
zigbee		[TWE-001L-DIC-WA]_x1(37x19基板)_デバッグ用に2個購入
			(PC側は[TWE-Lite-USB])
3軸ジャイロセンサ[AE-L3GD20]_x1(12x12基板)
3軸加速度センサ	[ADXL345]_x1(19x14基板)
シリアル-SPI変換モジュール
		SC16IS750搭載I2C/SPI_x1(12x14基板)
		在庫がないのでR1350N搭載ジャイロシールドを購入し改造
EEPROM		[24C512]_x1(1.0x0.9)
NOT回路		[TC74ACT14FT]
変換基板	[TSOP18ピン変換基板AE-TSOP-2]
紙基板
ユニバーサル基板
	両面スルホール・ガラス・ユニバーサル基板Ａタイプ
	２．５４ｍｍピッチ（１５５ｘ１１４ｍｍ）
■可動部
プロペラ	[CF3222ADP,U80N2]_x6
			(ギヤユニット[GB05など])
モータ		[MK07-3.3]_x6
■筐体(上記入手後ハンズで購入)
t=2mmシナ共芯合板
Dremel万能ルーター(TRIO)
モーター固定用Oリング
プラスチックなべ小ネジ

////////////////////
2014.08.03
モータドライバ[TB6593FNG]よさそう．秋月で買えないけどマルツにはある．
ピンピッチが細かいので変換基板をかませる
[【TB6593FNG(O.EL)】ブラシ付きモータドライバIC ]
[【D020】変換基板(20ピン・SSOP/SOP・5枚) ]

////////////////////
2014.08.02
モーターが逆回転できるか試さないとまずい．
-
モータードライバ3~3.7Vで動くやつある？TIのDRV8832が良さそう．秋月で買えるし．
DRV8830ならI2Cで指定できる．6chあるから通信ディレイがデカそう．却下．
PWM入力は反転して２入力にしないといけない．NOT回路6個入り準備[TC74ACT14FT]
ダメだ，データシート見るとPWM入力じゃなくて，
H-L入力の時に定速正転，逆で逆転，ブレーキ，惰性の4パターンしか出せないっぽい．
速度はVset端子電圧で決まるから，DA出力+正・逆をポート制御？あまりにも．．．
[TB6552FN/TC78H610FNG]ON抵抗がかなり高い．[TB6593FNG]いける？要確認
-
筐体は厚紙やパルプ．ベニヤ等の素材を切って試作．最終的には3Dプリンタ？
東急ハンズで見たところ2mm厚シナ共芯合板が良さそう．塩ビ板より軽くて曲がりにくい．
万能ルーターってやつで切れば試作レベルの加工はできそう．要実験．
モーターはゴムのOリングで切込みを入れた合板と巻きつける．
合板同士はプラスチックなべ小ネジで組み付け．
-
最終的にカメラを載せるかも．最初は載せない．
まずは形にすることを優先し，難易度の高いものは後回し．重いし．
-
最終基板はEagleで書く．(macでできる&オープンソースハードの定番っぽい&100x80に収まる)
暫定回路図もそれを見越してEagleで書く
h8は変換基板に載せる？FLASH書き換え回数増えるとデバイスだけ載せ替えたいかも．

////////////////////
2014.07.30
クワッドコプター購入．[4ch マルチコプター R/C スパイダー 赤]
プロペラが意外と小さい，が，かなり軽い．本体の筐体も無駄がなくて軽い．
軽さが一番重要そう
FR4,2層貫通基板
各モーターには2本の線が接続されている.
1本は共通(電源),マイナス側をNchFETで引っ張ってる
NchFET(BSS123?)x4でモータ駆動
無線2.4GHzトランシーバはA7105,基板上にアンテナパターンを形成.
リポバッテリーは3.7V240mAh,モータ駆動も3.7Vでしてる．
モーターはコアレスモータ？小さくて良さそう．
モータドライバでPWM制御(FETだと逆回転できない)
直結は効率が悪いらしいからギヤユニットをかませて作る?
	indoor airplane world e-shopで購入可能
	コアレスモータ[MK07-3.3]
	ギヤ[G209-071,G260]ギヤユニット[GB05など]を使用．実験して必要に応じて使用
	プロペラ[CF3222ADP,U80N2]
	電源[リチウムポリマーバッテリー3.7Vx1]
		マイコン直結(3.3V動作可能)
	マイコンはボードだと重いので[h8+QFP/TQFP100ピン変換基板]+紙基板


////////////////////
2014.07.29
自立飛行なら近接センサが必要
各プロペラに1セットずつ外側に向けて配置
シャープ測距モジュールが使いやすそう[GP2Y0A21YK]
6軸を監視しないと6軸移動できる意味が無いので3軸加速度+3軸ジャイロを載せる
秋月のラインナップから下記部品が買いやすい
EEPROMにパラメータを記憶する→自己学習みたいなことができるか.
DRAMにセンサデータを格納し，モニタしながら制御方法を検討

////////////////////
2014.07.28
着想：
H8マイコンを利用してラジコン的なアクチュエータを制御する物を作りたいと思っていた．
タイヤはありきたりだし，水に入れるのは実験が面倒なので空を飛ばすのが良さそう．
クワッドコプターは結構製品化されて性能が出ているが，もっとプロペラを増やして自在に動かしたい，

構想：
全軸(6軸)に移動可能にする．シンプルに考えるとXYZとそれぞれの回転方向で2個ずつプロペラをつけ，
全12個を使用すると良さそうだがあまりにも多い．
例えばZ軸移動とY軸の回転方向は共通のプロペラでできそう(X軸端にZ軸を中心とするプロペラを2個)．
そこで計6個のプロペラで6軸移動が可能になりそうと考えた．
デバッグや指示出し用に無線で双方向通信ができると便利．
Xbee(zigbee?)が秋月にもあって使いやすそう．
XbeeエクスプローラUSBドングルってのでPCから拾えそう
