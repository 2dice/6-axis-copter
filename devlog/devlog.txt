////////////////////
2014.11.28
graphを複製して行きたいので，serial_ifとdataのインスタンス作成を
別クラスに分けたい(data,serial_ifも複製されてしまうので)．→ctrlクラス作成
QMLからインスタンスを作るからctrlとgraphを両方QMLから起こすようにする．
QMLからC++インスタンスのゲッターはQ_INVOKABLEで簡単に呼べた．
理解するのは超時間かかったけど．
とりあえずグラフが形になったからコミットしよう．
これからの流れ
・gridサイズをQMLからセットする
・グラフにラベルを追加
・グラフを複数表示

////////////////////
2014.11.26
lineNodeをOpenGLから読み取る形式だったのをgridNodeと同じ方法で2D描画する方式に
変更したらちゃんとグラフになった．
描画時は始点と終点の座標をセットする必要があり，同じ座標を指定すると
点になって見えないので，データ位置+1と-1の位置に縦線を引く，というのを
全時間軸で描画することでそれらしいプロット線が引けた．

////////////////////
2014.11.25
とりあえずグラフにデータを流し込めた．
グラフは画面下に行くほどプラスになるから，符号を逆にしないと
直感的なグラフにならない．
縦軸を1000maxに取って500を入れても中心線より少し下にグラフが描画される．
グリッド線もグラフ線もy=200のラインに引かれてるのに表示がずれる．

////////////////////
2014.11.24
モーターを手当たり次第に買ってるからそろそろ定量評価をしよう．
電流・電圧・回転数・浮力を測定し各モータ・プロペラでの相関を見る．
回転数は非接触回転計を使用．電圧・電流はADで見れるようにしているから，
物理値への変換さえできればいつでも見れる．

浮力はモータ単体を秤に固定しプロペラを回転させ，重量差を測定．
本体重量+モータ重量(+プロペラ)*6の重量を２モーターで持ち上げるのが最低限．
できれば３倍の浮力がほしい．
プロペラ逆回転で２モーターでギリギリ持ち上がるのが理想．

////////////////////
2014.11.23
MFTでクアッドコプター展示してる人と話したら，プロペラ浮力は機体重量の3倍ないと
使いづらいっぽい．
プロペラ到着したからモーターフル実装で重量maxを模擬し，浮力確認．
→プロペラ確認結果
  GWS　4025:ぎりぎり浮かない
  GWS　4540:同上
  GWS　5043:同上
結論：プロペラ経による浮力向上は負荷上昇と相殺されてほとんど変わらない．
→リポ3セルにして電圧上げる
http://www.kkhobby.com/SHOP/BT107.html
だめならモーター変更(かなり重い，トルク大，2セル用，ネットショップにない)
GWS EDP-300HC
http://robin.jp/SHOP/EDP-300H.html
http://www.sumamokei.com/ep1.html
ダメならブラシレス
(基板改版，軽量化のためマイコン変更も視野に入れる:mbed NXP LPC1768とか)

////////////////////
2014.11.22
チュートリアルのコードが断片的でそのまま打っても実行すらできない，
前提知識を要求してる文章っぽいから違う方法で基礎固めが必要．
QtQuick1.0の英語チュートリアル(11.20の上のURL)やってから
再度こっち(下のURL)をやるのがいい気がしてきた．
→英語チュートリアル短い上に最後の例で動作しない．
  すぐに2.0に戻ってきたけどやっぱりうまく動かない
-
もう面倒だからgraphのサンプルコード移植しながら作ってしまおう
→とりあえずマージしてsin波グラフとシリアル受信の機能をもたせられた．
  Widgetとqmlのウィンドウが両方でるから統合してデータにセンサデータを入れたい

////////////////////
2014.11.20
チュートリアルのQtバージョンが古くて全然動かない．
動くように修正しながら進める勉強法と，サンプルコードをコピペしていく勉強法
どっちがいいだろうか．前者は未経験にはハードル高い．
新しいチュートリアルを探してみようか．
http://qt-project.org/doc/qt-4.8/qml-tutorial.html
http://getting-started-qml-ja.readthedocs.org/ja/latest/chapter01.html
サンプルコードgraphはQtQuick2.0．2.0のチュートリアルがmust．
上のリンクは1.0だから下のリンクで良さそう．

////////////////////
2014.11.19
ブラシモータ到着
リポバッテリ2セル7.4Vだとギリギリ浮かない．．．くらいまで来た．
フル充電でプロペラサイズ上げればもしかしたらいけるかも．
ただモータ重量が結構あるから+4個のモータを載せて飛べるかは怪しいところ．
ブラシモータはトルクがでかいからプロペラサイズ上げても
回転数はそれほど落ちないと期待．
-
気になったのは，ブラシモータの場合回転数が電圧と比例しない．
5Vを切ると回転が完全に止まる．
制御を工夫しないとホバー軸方向以外のプロペラは回転数が低いから苦労しそう．
もしくはホバー軸以外はコアレスのまま，という選択肢もありか．
ただし軸交換してのホバーができないからいまいちか．
-
qwtは出来る見通しが立たないのでqt quickのscene graphで描画することにする．
とりあえずチュートリアルでqt quickの概要をつかむ
http://blog.qt.digia.com/jp/category/qt-quick-tutorial/page/2/
http://blog.qt.digia.com/jp/category/qt-quick-tutorial/
QtCreatorの中にサンプルコード[graph,customgeometry]があるから
これを参考に実装していく

////////////////////
2014.11.18
Qwtのインストールがうまくいかない
以下のとおりQtCreatorでビルドたライブラリとフレームワークを
QtCreatorパッケージ内にコピーしてinstall_name_tool -changeで参照先を
パッケージ内に変更したけど起動時に落ちる．
http://doc.qt.digia.com/qtcreator-2.4/adding-plugins.html#configuring-qt-designer-plugins-on-mac-os
参照先を変更しない状態ではプラグインとしては見つかるけど"失敗したプラグイン"に
分類されていて使えない．
妥協案としては違うパッケージを試す/チュートリアルにあるグラフで描く
QtQuickのSceneGraphがよさそう？

////////////////////
2014.11.16
データ取りこぼし問題．
根本的な問題．ターミナルでminicomで受信しても同じ事象．Qtのせいじゃなかった
→勘違いだった．マイコン側の送信カウンタのインクリメントタイミングミスってた．
  送られてくるデータはこぼさず拾えてる．
  ただし表示はかなり遅い．8秒間で80カウント行くはずが22までしかいってない．
  minicomなら80カウントいってるからQt側が遅い？
  emitでstoreDataに送る処理をマスクしても変わらないから
  readLine割り込みのペース，もしくはqDebugの出力(実際は格納できてる？)
  が遅いっぽい．
  →qDebugを最小限にしても出力ペースが変わらないからreadLineのペースが遅い
  →サンプルのTerminalExampleでは80カウントとれているからこの差分に鍵がある
    →readAllなら80くらい行く．readLineとreadAllに差があるっぽい
      →readAllで取得して改行ごとに自分で区切る処理にしたら
        とりあえず8秒で80カウントとれた．

////////////////////
2014.11.15
Qtでシリアル受信しているけどコンソール出力が明らかに遅い．
100ms周期で送ってるはずなのに1秒周期でしかとれてない．
80msでも1/10,2msだと1/2で取れる．
→負荷的に取れないわけではない
  受信が一定時間ないと無視するようになってる？
調べたらバッファクリアすると取れるっぽい記述があったけど
store後にserial->clearしたら取りこぼしが増えた．

////////////////////
2014.11.13
とりあえずコンソールに値を出すことに成功．
データを各パラメータごとに抽出して格納できるようにして，
クラスを分けたらコミットしよう

////////////////////
2014.11.12
ブラシレスモーターだと基板改版だけど，ブラシモーターなら今のまま行けるかも
この辺とか使えそうGWS EDP-50XC
http://robin.jp/SHOP/EDP-50XC.html
http://www.hs-alfa.com/menew/motor/burasi/ds%20gws%20edp_50.htm

////////////////////
2014.11.11
φ12cmプロペラアダプタ到着．全然浮力がない．
φ8cmと同じ重さでもそもそも回転数が上がらない．
φ8cmの方が浮力がある．
電子はかりで確認したらプロペラ1つで10gくらいしか軽くならない．
単純計算このモーターだと20gの筐体が限界．
軽量化の範囲ではないからモーターの再選定が必要．
将来的にカメラとか載せるかもしれないし．
軽量化路線ならこんなでかいモータドライバ・Gyro・加速度・I2Cバスコンは使えない
浮力計算は下記が参考になりそう
~~~~~~~~~
http://ameblo.jp/fullmetal-moon/entry-11330869139.html
静止推力（ｇ）＝（プロペラ径÷10）^3×（ピッチ÷10）×（回転数÷1000）^2×22
消費電力（W）＝（プロペラ径÷10）^4×（ピッチ÷10）×（回転数÷1000）^3×0.45
※単位：プロペラ径、ピッチはinch、回転数はr.p.m.、推力ｇ（グラム）、
        電力W（ワット）
ついでにプロペラによって得られるピッチスピード
（プロペラの直ぐしたのところの風速）の計算式は
ピッチスピード＝（P/10）×（N/1000）× 15.24　単位（Km/h）
~~~~~~~~~
マルチコプターのモーターはブラシレスモータが多いっぽい
ブラシレスモータはKV値というものがあり，巻線の巻数が少ないとKV値が高いらしい．
KV値が高いほど低トルク高速回転．コアレスモータも同じなのか？
だとしたら1.7Ωモーターはもっと軽いプロペラでは回転数高いかもしれない．
使わないから今更試す気はないけど．．．
-
モータドライバ選定
TI：DRV10983      ※バッテリを3セルに，本命
Hitachi：HA13605A ※ホール素子入りモータ

////////////////////
2014.11.10
Qtチュートリアル終わったからQtSerialPortのサンプルプログラムを参考に
ツール実装開始．
とりあえず受け取ったシリアルデータをコンソールに出すことを目指す．
-
電子はかりで重量測定．80gくらいっぽい．思ったほど重くない．

////////////////////
2014.11.08
筐体組み上げると机に置けないからスタンド作成．
アメンボは必要性が薄くなったから保留．
ぶつかった時の保護という意味ではプロペラの脇につければ十分な気がする．
-
モーター抵抗値違い比較
購入した軽いプロペラはモーター軸との接続がうまく行かず吹っ飛んでくから，
重いφ15cmプロペラと軽いφ8cmプロペラ両方で感覚比較．
3.3Ωのほうが1.71Ωよりもなんとなく風が来る気がする．
rpmを測定できれば定量比較ができるけどどう測ろうか．．．
ひとまずは3.3Ω品で本命プロペラ試してから考えよう．
-
プロペラ固定
購入したのはプロペラアダプタが必要なプロペラだったっぽい．
アダプタ在庫がsoldoutだからどうしたもんか．．．
とりあえず店舗に問い合わせてみるか．
→問い合わせたら2分で在庫ありましたメールが来た．早速注文．
  すげぇフットワークだindoor airplane．

////////////////////
2014.11.06
Qtでシリアル通信を実装するにはQextSerialPortとQtSerialPortがあるらしい．
QextSerialPort
http://d.hatena.ne.jp/wikuba/20120122/1327246038
http://kmst.sakura.ne.jp/joomla/topics/2010-06-25-03-48-23.html
QtSerialPort
http://doc-snapshot.qt-project.org/qt5-5.3/qtserialport-terminal-example.html
QtSerialPortが標準っぽい．日本語情報はほぼない．
まずはQtCreatorの使い方に慣れたらQtSerialPortでやってみるか．
-
QtCreatorのvimモード結構完成度高い．sublimよりよっぽどちゃんとしてる．
たまにカーソルが表示されなくなるけど．
-
初めてまともにIDE使う気がする．
癖が強いけど慣れればプロトタイプ作成は超早いかもしれない．
-
Qwtインストール方法．そのうち試す
https://www.youtube.com/watch?v=ZqFKwF6q7jQ
http://doc.qt.digia.com/qtcreator-2.4/adding-plugins.html
-
Qwtとserialport連携？あとで読む
http://www.qtcentre.org/threads/55707-Qt-with-qwt-qextserialport-unable-to-plot-from-serial-port

////////////////////
2014.11.05
コアレスモータはコイル抵抗が小さいほうが回転数もトルクもでかいっぽい．
抵抗小さい→インダクタンスが小さい→モーターとしては性能出にくい．
という理解だったけど違うっぽい．
インピーダンスの小さいモーター買って比較してみよう．

////////////////////
2014.11.04
モーター取り付けが鬼門．
つるつるした円筒形筐体が回転して上に引っ張られるから回転方向と上下方向の固定が必要
筐体側にガイドを作って接着剤で接着しテグスかなんかで補強する？
コアレスモータの表面があまりにツルツルだから超音波カッターで表面荒らしてみようか．
テグスで引っ掛けるところに少し凹みを出したい．
内部のクリアランスがどれだけあるかが気になる．
-
もう一つの課題が浮力．
プロペラは土曜に届くらしい．おそらく重すぎて飛ばない
	プロペラつけて浮力確認
		→軽量化検討(電子ばかりでどれだけ軽くなるか確認)
		→コアレスモーターインピーダンス違い品試す(そもそも仕組みは？)
		→サーボモータ検討(完全筐体再設計)		
-
アメンボ取り付けが地味に難題．
プロペラに干渉しないように強度のあるアメンボをつけようとすると曲がる強度のある針金．
重すぎるのでは？
1mm各の竹ひご３本束ねて使おうとしたけど配置も強度も話にならなかった．

////////////////////
2014.11.03
とりあえず筐体切り出し完了
ベニヤだと細いところが脆そう．接着剤とかで補強したほうがいい？
各軸の組み合わせ部分の精度が出にくい．調整に少し手間取った．
超音波カッターだと無意識に傾けて切ってたから断面が斜めだ．
気にしてたことだけど固定部が少なすぎて各軸の直角が出ない．グラグラ．
L型金具で直角を出そう．手持ちのやつで良さそうなのがあるからつけてみる．

////////////////////
2014.11.02
超音波カッター届いた．
2mm厚だと意外と切れない，押し込んでいくとベニヤが焦げる．
押し込まずに複数回で切るつもりで行けば割と切れるっぽい．
1mm厚までなら恐ろしいくらい切れる．

////////////////////
2014.11.01
リポバッテリー2セルでデューティ100%にしたらコアレスモータがオープン故障した．
5Vまでは壊れない確認ができたから5V上限で考えるか．
ちなみにリポ２セルの電圧範囲は7.2V-8.4V
-
TRIOでベニヤカットし始めたけど，ベニヤが脆いからボロボロになる．あと超うるさい．
当初代替案として検討してた超音波カッターのほうが良さそう．
穴あけはできないからそこだけTRIOに頼ろう．
超音波カッターが届くまで違うことをしよう．
→注文したら明日に届くらしい．恐ろしいなamazon

////////////////////
2014.10.31
φ150mmプロペラ全然浮力がない．重すぎて回転数が落ちるからφ80mmの方が浮力がある．
φ120mmを買って試してみるか．．．φ100mmで軽量のが在庫ない．
φ127mmで手持ちのφ8mmとほぼ同じ重さのプロペラがあるから買ってみよう．高いけど
http://www.shop-online.jp/eSlowfly/index.php?body=spec&product_id=643861&category_id=97881
-
筐体設計
測距センサをつけるためにモーター取り付け位置を釣り針型にしていたのを思い出した．
あとプロペラφ12が限界っぽいからそれを元にアーム長さ修正

////////////////////
2014.10.30
emacsのflycheckでinclude pathを追加してエラーを消そうといろいろ調べてたら
日付が変わってた．
flycheck-clang-includesでpath指定したらエラー消えた．

////////////////////
2014.10.29
macportsでQt5をインストールしてみたけど，web上のチュートリアルはQt4が多い．
実行すると色々エラー出てハマるっぽいからQt4入れなおした．
GUIで作れるツールが有るっぽいけど中身が見えなすぎてよくわからないから
しばらくはターミナル環境で慣れよう．
-
筐体設計：電池ホルダ用の穴あけるの忘れてた．
土曜にルーター届くから削りながら微調整しよう．

////////////////////
2014.10.28
processingでツールつくろうとしてたけどc++とQtを使ってみたくなったので，
自ら泥沼に突っ込んでみようと思う．
挫折したらprocessingに戻せばいいや．processingでもできるかわからんが．
-
C++の文法概要通読．
何がCの拡張だよ，ここまで拡張したら別物だろ．

////////////////////
2014.10.26
実基板を元に筐体再設計．

////////////////////
2014.10.25
基板届いた．見る限りミスはなさそう．
部品を実装していく．
-
買ったプロペラ思ったより重い．これが重いのかそもそもφ18cmだから重いのか．，，
コアレスモータじゃ高速で回せなそう．
実験したいけど穴径が違うから後日ゴム栓を購入してモーターに接続しテストする．
見込みなさそうだから15cm・18cmプロペラも購入して実際に回してみようか．

////////////////////
2014.10.18
部品表仮作成，東急ハンズで買う物は店舗行ってから決める．
来週基板が届くから電子部品系は発注しよう．

////////////////////
2014.10.14
DRCかけたらERRが100件超え．そんな気はしてたさ．．．
-
GNDが一本エアワイヤで残ってた．危ないところだった．
仕事だったら全ネット検図頑張ろうってなるけどテンション下がるからやる気にならない．
１時間くらい場当たり的にざっと見て発注しちゃおうかな．．．
-
3D図見てたら完全に方向ミスってるのに気づいた．
Z軸のプロペラ完全に横向いてる．．．
単純に横向けると固定方法が難しい，どうしたもんか．
→切り込み入れてはめ込むか．実機見ながら合わせれば行ける気がする．
  3D図面って修正する気力を削ぐな．．．

////////////////////
2014.10.13
後はGNDベタだけ，というとこまで来たけど，思ったよりスカスカだな．
あんなに苦労したのに最初に配置したあたりはぎちぎちだけど反対の基板端はスカスカ．

////////////////////
2014.10.12
信号線から優先して配線して行ったら電グラ線が通らないのでは？という気がしてきた．

////////////////////
2014.10.11
基板アートワーク開始
加速度センサのフットプリント間違ってた．危ないところだ．．．
-
当初の予定の70mmx70mmに載せるの不可能に見える．
→やり始めると割りと小さくまとめられそう，75mmx75mmくらいなら入りそう
→70mmx70mmに入るかも．アートワークのコツは思い切りと根気だという気がしてきた．
  DIP部品を半分ずらして表裏に実装するという裏技を思いついた．
  手ハンダだからこそできることだな．
  あと手実装だから基板ギリギリまで載せても捨て基板がいらないから楽だ．
  部品間も詰められるし
  そう考えると自動実装ってかなり制約が多いな，

////////////////////
2014.10.09
簡易グラフで見たけどうまく行ってないっぽい，
近似積分はブールの公式で実装してみたらそれっぽい値が出たけど，
距離は誤差がでかすぎて使い物にならなそう

////////////////////
2014.10.08
加速度から速度・距離の算出が鬼門．
速度は真値がよくわからんし，距離は誤差が積み上がってんのか間違ってんのかわからん．
グラフで出てくればイメージつかめるかもしれんからとりあえずグラフ作るか．

////////////////////
2014.10.06
モニタツールのwindowは左右2分割．右にセンサ値等を時間グラフで配置する．
右側は縦に4分割くらいして加速度・角速度・PWM・距離を表示．
加速度は速度・距離に切り替えて表示できてもいいかも．角速度は角度との切り替え．
左側には角速度と加速度を元に3Dオブジェクトを移動させたい．
-
書きながら作るのって難しい．紙の上で最初に関数分け考えてから作らないとうまくいかない

////////////////////
2014.10.05
角速度センサの実装を始めた．2バイト読み出ししようとしても，
値がHとLで同じ値になってる．加速度は勝手にアドレスをインクリメントしてくれてたけど，
こいつは同じアドレスから2回とってるだけっぽい．
とりあえず1倍とずつアドレスをずらして個別取得したらそれっぽい値がとれた．
-
データシートよく読んだらレジスタアドレスに違うアドレスを指定する必要があるっぽい．
1バイト読み出しの時は0x28で読むレジスタの場合，
2バイト読出したければ0xA8をレジスタアドレスに指定しなければならない．
やってみたら読めた．何だこの仕様．アドレスマップに書かないで字面でチョロっと
書いてあるだけだから完全に見落としてた．
-
EEPROMの実装は後回しにしてprocessingでツールの作成を始めようかな．．．
回路図の修正もしないとな．ツールとEEPROM動作確認ができたら基板起こすし．
-
processingでツール作成中．
なんかデータの合間にNULLがいっぱい送られてきてるからNULLを無視するようにした．
IDEのエディタが補完すらしてくれない
→PDE Xを入れたら多少ましになった．
  emacsでやりたいけど実行環境とエディタが分かれるのが面倒．
  ストレスが限界に来たら考えよう．
グラフ作成が楽だと思ってprocessing選んだけどあんまり楽でもなさそう．
Cで書くよりは楽なんだろうか．

////////////////////
2014.10.04
100Hzでセンサがデータためてるからその周期で読み出さないとダメっぽい．
10ms周期で空読みしたらそれっぽい値が出た．
→と思ったらZ軸は重力方向に200ちょい出てるけど
  X,Yは一瞬200ちょいになって安定すると30くらいに戻る．微分値みたいな出力．
  →Y軸を重力方向に向けると真下だと30位だけどちょっと傾けると200ちょい出る．
    明らかにある領域だけ値がおかしい．
    センサが壊れてるか，データフォーマットがバグってるか，
    読み込み時に化けてるか，送信時に化けてるか．．．波形見てみるか
    →読み込み時に化けてた．8bitシフト必要なのに4bitシフトしてた．

////////////////////
2014.10.01
ライトからリードの切替時のスタートビットはリピートスタートが必要で，
ストップビットを送ってはいけないっぽい．単純にストップビット送信をマスクするとバグる
リピートスタート時はSTAをセットしてから，前のデータの転送で立ったSIを
クリアして送ればいけた．
-
レジスタ設定→リードコマンドは送れてるっぽくてなんかデータは返してるけど，
加速度が0付近になってない．
2回めのリードではスタートビットが遅れておらず，
その後は加速度センサがLに張り付かせてるから何も送れてない．
→STOPビットの直前はNACKじゃないとエラーになるっぽい．AAビットを落としたらいけた．
-
データっぽいのは出てるけどZ軸は重力方向に200ちょいくらい出てるけど，
XYは値が30くらいからあんま動かないから取れてないっぽいor変な値が取れてる．
計算上は271LSBで1gだからXYも下向けたらそれくらい出るはず

////////////////////
2014.09.30
I2Cの初期レジスタ設定は送れた．
1回目のデータリードは信号は送れてるっぽい．
ただしW→Rの切り替えでストップビット/スタートビットを送らないと
リードコマンドが出せない．

////////////////////
2014.09.29
I2Cのデータ送信がタイミング的にかなりシビア．
SIビットを落とすタイミングはデータシートに厳密には書いてないけど，
SIDはスタートビット送る前にセットしないと送れない．
あとはSIビット落とすタイミングで取り込まれるっぽい
やっぱりデバイスドライバは波形見ながらじゃないと作れなくない?

////////////////////
2014.09.28
HWRとRDの接続が逆だった．なんか正しい波形が出てるっぽいけどwaitから抜けられない．
ENSIOを1にセットした後550us後にENSIOが1に落ちるはずが落ちてない．
→データシート見たらそれはパワーオンリセットの時だけ？
  とりあえずwhileでビジーループに変更
→何度やってもバイナリを書き込めないと思ったら2セルのリポバッテリが
  3.2Vまで電圧落ちてた(正常時7V以上)
  充電器につないでも接続不良になる．調べたけど買い替えしかないっぽい．
  この電池取り扱い難しすぎ．．．
  とりあえずACコンバータから使えるように改造しようか．
-
なんとか加速度センサからなんかの値をとれた．最初の2回だけ0b07,0b17でその後は0
加速度かけても0張り付きだからうまく取れてないっぽい．
明日以降はI2Cの波形見ながら解析していこう

////////////////////
2014.09.27
特に理由もなく，なんとなく開発が中断してた．
I2C実装中．
加速度センサの2バイトデータを受信する場合，
8bitずつしか転送できないI2Cではどうするんだろうか．
→仕様書見たら勝手にインクリメント・デクリメントしてくれるから
  2バイト連続読み出しでいいっぽい．ただしアドレスシフトはデバイスによる．
とりあえず実装して波形見ながら調整しておこう．
-
バッファモードは複雑そうだからバイパスモードで，と思ってたけど
バッファモードは例が細かく書いてあってバイパスモードの設定例がないからわからん．
バッファモードにしようかな．．．

////////////////////
2014.09.18
波形を見ると送信１回に対して何かをレスポンスしてるっぽい．
連続６回送信すると50ms周期でレスポンスを返してくる．
これがエラーになってるっぽい．
エラーの割り込みを分離して何回エラーが入るか見てみる．
→boot時に５回AD値連続送信後に１回ずつエラーが入ってる．
  多重割り込み時に発生？そもそもなんで送信に対しレスがあるのか？
  ToCoStick外してもレスがあるからDIPが返してるっぽい
TWE-Light DIP・ToCoStickを両方透過モードにしたらerrでなくなった&コマンド受信成功

////////////////////
2014.09.17
TWE-Lite-Rが届いたのでApp_UARTを書き込んだら普通に受信できた．
やはりApp_TweLiteでは普通のUART通信は未対応っぽい．
[超簡単！TWEアプリ]のあの絵は詐欺臭い．
-
zigbeeからの受信割り込みを実装しようとしたら，起動時に謎のオーバーランエラーと，
定期的に謎の受信割り込みが入る．
tocostickからなにか送ってる？プロンプトには何も表示されていない．

////////////////////
2014.09.13
I2Cバスコンのレジスタマップをlibre officeで作ってたらクラッシュして飛んだ．
自動保存から復元できたけど15分単位だったから最後の5分ぐらいは消えた．
こういうのでモチベーションが下がるのは何とかならないものか．．．
-
I2Cはとりあえず一番シンプルな割り込みなしのバイトモードで使ってみよう．
必要に応じて変更する．
データシート英語だし設定少し複雑そうだから難航しそうな予感

////////////////////
2014.09.12
結局UART専用アプリじゃなきゃUARTの通信はできないっぽい？
サポートにメールしたら
	標準アプリじゃUART通信できない？
		→手持ちのUART専用アプリだとできてるけど，，，(意訳)
という謎のやりとりになったからとりあえずTWE-lite r買って書き換えてみよう．
SDKはwindows版のほうが力入れてるっぽいからwindowsでSDK入れて書き込みしよう．
App_UARTを見てから必要に応じて改造．
TWE-Lite Rが届くまではI2Cバスコン側の実装を進める．

////////////////////
2014.09.10
zigbeeに波形入れると出力電圧が1V弱/GNDの波形になる．
zigbeeの設定品をいろいろ試したがどこも問題なく，結局3.6Vが出ていないことがわかった．
探っていくと加速度センサのJ2をショートしていたことで
アドレス設定品が3.6Vになっていて，そこをGNDにするつもりで回路でGNDにしていたから
3.6V-GNDショートになっていた．
多分自分でショートさせたんだろうけど，なぜJ2をショートしたのか覚えていない．
-
とりあえずzigbeeでシリアルを飛ばせるようになってminicomで受けられたっぽいが，
すべて文字化けしているし，10sec間隔でデータを送っているはずなのに，
1sec間隔で文字化けした何かが出る．ボーレート設定が怪しいがzigbee側もminicom側も
問題なさそう．
→TOCOSTICのデフォルトが115200bpsっぽい．
  これを38400bpsにすれば動きそうだけど変え方がわからん．
→結局分解してBPSをGNDショートしたら38400bpsで起動メッセージが出た．
  ただデータが1sec周期で謎の16進数.
  →ボーレートはコマンドで設定できる方法があるっぽい．明日確認しよう．

////////////////////
2014.09.09
熱対策：
コアレスモータと直列にコイルを入れることでリプル電流を抑制し，
発熱を抑えることにする．
16bitタイマの250kHzのPWMだと22uHで許容範囲(暖かい？くらい)に収まりそう．
8bitタイマの31.25kHzだと100uHくらいが良さそう．
22uHはラジアルタイプが秋月にないから47uH[LHL08NB470K]，100uHは[LHL08NB101K]
-
zigbee実装しようとしたら今までSCI0だと思って書いていたものがSCI1だった．
どこで間違えたんだろう．

////////////////////
2014.09.08
PWMでデューティ50%でほぼ静止状態なのにモーター超熱い．
周波数あげたら良くなる？
250kHz->500kHzにしたけど30秒で触れなくなる．
250kHzだと15秒位で限界だからマシにはなるようだ．

////////////////////
2014.09.07
AD変換方法の検討．scan modeに単一と複数を同時取得するモードが有る．
しかし複数ch同時でも0~3,4~7の2回に分ける必要がある．
複数同時は常にスキャンし続けるため電力的には不利．
単一は必要なときに読みに行くためAD変換が終わるのをループで待つため時間的に不利．
以上を踏まえ以下の3案を検討
○案1	スキャンモードで
	0~3ch読み取り後4~7chを設定し完了フラグを待って読み取り
◎案2	単一モードをループで待って全ch読む
△案3	スキャンモードで
	奇数回目の10msタイマー割り込みで0~3chを読み取り
	偶数回目で4~7chを読み取り
案2で時間的に間に合わなければ20msタイマにして時間を伸ばすのが良さそう
また，10bitADだが上位8bit->下位2bitの順で読み出すため，
上位8bitで事足りるならそれだけで良さそう．
精度はそんなにいらないので上位8bitだけ取り出すことにする．
-
ADCのデバイスドライバ実装中．何度やっても0しか出ないと思ったらレジスタ設定の
上位と下位を逆にしていた(ex 0x0f->0xf0)．
AD完了をADFでなくADSTで見ていたのでうまく行かなかったようだ．
直したら測距センサの値が正常に出力された．

////////////////////
2014.09.05
リポバッテリー到着，基板側のコネクタはS3B-XH-Aが良さそう．
ユニバーサル基板上にひと通りのデバイスを載せてデバイスドライバを作る．(0x基板)
モーターと測距センサはとりあえず1chずつ．
意外とユニバーサル基板ってはんだづけしづらいな．．．綺麗に配線できない．
とりあえず配線終了．シリアルから文字列が送られてきてるし3.6Vも出てるから
これからデバイスドライバを実装していく．

////////////////////
2014.09.01
バラックボード実装中．2.54mmピッチのユニバーサル基板に乗せるとかなり面積食う．
モーターと測距センサは動作確認できればいいから1chずつ．
-
やはりネックはプロペラの浮力．
以下のプロペラ15cmと18cmのセットを買って試してみよう．
http://www.rubberpowerplane.com/pg12.html

////////////////////
2014.08.27
部品実装完了．Proボードでソフト動いた．
ここからボード外の回路をテストしていく．
足りないもの
・pinヘッダ2x20
・pinヘッダ1x20?
・pinソケット2x20
・フラックス(0.65ピッチ実装用)
・リポバッテリー2セル
-
PWM実装・AD実装をそろそろ始める

////////////////////
2014.08.24
Proボード届いたけどh8とDRAM以外部品が実装されていない．
Proボードってそういう意味だったのか．とりあえず手持ち部品で実装していこう．
まずはaki-h8_3069fで作ってたソフトをちょい変して少しずつソフトを作っていこうか．

////////////////////
2014.08.23
よく考えたらデバイスドライバの初期化関数は1度動いたら変更しないから
テストいらないのでは？リファクタリングする場合以外は．
いや，異常系のテストしたい場合はいるのか．．．
思ったよりCppUTest使いこなすのに時間かかりそう．
イニシャライズだけ先に実装するか．
...なにか大きな勘違いをしていたかも．CppUTestってh8上で実行できない？
パソコンでコンパイルしてもh8向けのバイナリでテストが成功するとは限らないし，
h8上で関数テスト関数を実装してリリース時にはmakefileで分離できるようにしたらいいかも
ということでとりあえず実装開始してテストがしたくなったら
test関数上で分離できるように実装しよう

////////////////////
2014.08.16
Proボードが届くまで少し時間がかかりそうだからTDDを試してみたい．
[テスト駆動開発による組み込みプログラミング]を試して，
その後テストコードをソースに入れ込む．しばらく開発が停滞する．

////////////////////
2014.08.15
ZigBeeのUARTボーレートは115200bps/38400bps．
h8の設定では115200は誤差が大きすぎるため38400で使用．BRR=19
minicomで数字がバラバラ表示されても意味わからんから
PC側でグラフィカルにログできるツールが必要．
Arduinoのお陰でサンプルコード結構ありそう．Processingって環境で作りやすいらしい．
グラフ表示・数値保存・数値再生・3D表示(加速度・角速度似あわせてモデルを動かす)
-
測距センサは角度分解能が低いから死角が多い．
筐体の正面を決めて最も障害物が近い方に正面を向ける．
動いてれば回転するから死角が減らせる．
-
パラメータって何があるのか具体的に考えてなかったからちょっと考えよう．
・PWM設定値*k=移動加速度or角速度(静的)
	6軸組み合わせ?2^6=64パラ?6パラのベクトル演算で行ける？
・PWM変動値*l=収束時間or単位時間での加速度変動(動的,伝達関数)
	6軸組み合わせ?2^6=64パラ?6パラのベクトル演算で行ける？
・PWMリミット値(モータ保護)
・電流リミット値(モータドライバリセット)
・接近回避しきい値 6軸
-
移動座標をそのまま扱うのは難しそうだから加速度/角速度ベースの制御が良さそう．
ある点からある点へ移動させるには加速度値はsin波を描くようにしなきゃならない．
PWMは定数lの遅れがあるからその分を補正する必要がある．
lは単位時間毎(100ms?)で分割して持ったほうが良さそう．
ちなみに10ms周期で加速度等を観測し100ms周期でPWMを調整する予定
-
イニシャライズコマンドでk,lを自動取得したい．
重力方向によってパラメータが変わりそう？
重力加速度を定数ベクトルとして持っておけばベクトル演算で行ける？
まずはZ軸固定でやって，その後パラメータは考えよう．
-
空間移動は座標->距離->到達時間->sin波(加速度-時間)マッピング
	->100ms間隔でのPWM値マッピング
到達時間は単純な1次関数にはならないので注意が必要
(近距離では遅くなる,遠距離では1次関数に近づく)

////////////////////
2014.08.14
zigbeeのRSTはフローティングで解除されるのか？記述がないけど接続例ではOPEN．要実験
-
バスに抵抗入れて保護するのは抵抗アレイに変更．さすがに多すぎ．
BCN164AB102J7LFなら3216で４素子(1k)．マルツで買える
-
そろそろ部品表作らないと．混乱してきた．
-
inventor fusionで3D図面書いてたらフリーズして書いてたデータ飛んだ．
こまめにセーブしよ．
骨格書き上がったけどモーターとプロペラないとわからんな．

////////////////////
2014.08.13
電源入れた直後はPWM出力できないから電源電圧がモーターにもろにかかる．
ドライバの出力を切れる回路を追加する．
-
電力効率の計測のためにBAT電源電流をモニタしたい．
作動増幅？電流が一定値を超えたらモータ出力を止める？(突然の自由落下)
良さそうなICはある[LT6106CS5](検出0.02Ω-0.2W,入力200Ω,出力10kΩ)
検出抵抗はCRL1206-FU-R020ELF(RSコンポーネンツ3216サイズ)それ以外は1608で適当に
http://akizukidenshi.com/catalog/g/gI-07300/
非常時だけならヒューズを入れればいいか．
リセッタブルヒューズってのがあるらしい．熱で物性が変わって抵抗値が急激に増加する．
http://jp.rs-online.com/web/p/resettable-surface-mount-fuses/6917597/
↑この辺試してみる？7.5x5.5くらい．MF-SM300-2
-
ProボードCN1,CN2の接続はLANボードと全く同じ．さすが秋月わかってる．
-
電源電圧上がったから逆接保護Diいれるか．リークは気にならないからショットキー
[SR54F]
どんどん面積が増えてる気がするけど載せてから考えよう．

////////////////////
2014.08.12
測距センサが5V動作品(4.5~5.5V)だった．なぜ気づかなかったんだろうか．
とりあえず3.7Vで動作確認．
→黒線が5V入力・赤線がGND入力だった．逆接して壊した．死ね．
-
LiPoバッテリ実測4Vちょい出てる．加速度センサの定格が3.9V,動作maxが3.6V．
3.3Vレギュレータかませる?Zigbee,I2Cバスコン,Gyroも3.6まで．
DRAM,NOT回路4.5~5.5
Lipo直列にして6~8Vを5V/3.3Vドロップ．モーターはBatt直結PWMで制限?実力行ける?
多電源だとレベルシフタが必要．電源電圧を極力近づけて直接やり取り．
定格超えるけど実力行ける？1.5kくらい抵抗入れて何とかなるかも．．．
レギュレータ[NJM111000F1]
Batt:	モータドライバ
4.5V:	DRAM，NOT,マイコン,シリアル,測距センサ,モータドライバ(I/F),EEPROM
3.6V:	Zigbee,I2Cバスコン,Gyro,加速度
LiPoは2セルのモジュールが売ってる．充電器とともに購入
http://www.kkhobby.com/SHOP/BT167.html
-
I2Cのアドレスがかぶっていないことを確認
デバイス	I2Cアドレス
加速度センサ	0x53(L)		or 0x1D(H)
Gyroセンサ	0xD5 & 0xD4(L)	or 0xD7 & D6(H)
EEPROM		0x90 & 0x91(LL)	or 0x98 & 0x99(HH)
問題なさそうなのですべてL接続で使う
-
角速度センサはFIFO持ってるけどポーリングで10ms周期でとるからBypassモードで使う
-
プロペラはこれでも良さそう6x4Eは6inchでピッチが4inch
http://www.kkhobby.com/SHOP/PP031.html

////////////////////
2014.08.11
コアレスモータをLiPoバッテリでフル回転させたけど，8cmプロペラ2個で飛べるとは思えない
18cmプロペラで飛べるか確認→ダメならモータ変更
なお，逆回転は問題なし
-
筐体構造検討，手書き図面作成,とりあえず試作してみる
-
アメンボどうやってつけよう

////////////////////
2014.08.09
回路図作成のため部品ライブラリを作成する
		symbol			package
マイコン	h8/3069f		h8/3069f_pro_board
DRAM		M5M417800
マイコンボード	h83069f-pro		基板
モータDr	TB6593			基板
LiPoBatt	LiPoBatt		コネクタ
モータ		MK07-3.3		コネクタ
測距センサ	GP2Y0A21YK		コネクタ
zigbee		TWE-001L-DIC-WA		基板
Gyroセンサ	AE-L3GD20		基板
加速度センサ	ADXL345			基板
シリアル変換	PCA9665PW		基板
EEPROM		24C512			24C512
Not回路		TC74ACT14FT		基板	
-
LANボードとProボードはDRAMのpin配が違うがCPUとのつなぎは同じなので
ソフト変更不要のはず．
クロックは25MHzが標準なのでLANボードでテストするときに付け替えておく
-
プロペラ思ったより小さい．飛びそうにないから以下の15/18/21cmを試す
http://www.rubberpowerplane.com/pg12.html
紙を各デバイス・基板サイズに切って基板サイズ予測->プロペラサイズを感で決める
→最終的には70x70mmに収まりそう．
  そこそこの重さになりそうだからプロペラは18くらいか．
-
UART-シリアル変換は在庫がなさそうだからI2CバスコントローラPCA9665PWを使用
http://www.marutsu.co.jp/ichiran/?SHO=011811
NICと同じ方法でアクセスできそう
-
モータドライバはh8Pro基板の下に実装．SMTを直で(DIP変換基板にしない)．
NOT/I2C/ACCもPro基板の下に入れられそう．
ACCは軸中心に置きたい．Gyroはどこでも．ビス付近の方が振動しなくていい．
Zigbeeアンテナはプロペラと干渉しないように注意

////////////////////
2014.08.06

買い物メモ
■回路
モータドライバ	[【TB6593FNG(O.EL)】ブラシ付きモータドライバIC ]
		[【D020】変換基板(20ピン・SSOP/SOP・5枚) ]
マイコン	[aki-h8/3069FマイコンボードDRAM付 Pro用]
バッテリー	[リチウムポリマーバッテリー3.7Vx1](USB充電可能なもの)
		コネクタ[1.5mm ピッチJSTベース付きピン 2 ピン 10個セット]
測距センサ	[GP2Y0A21YK]_x6
zigbee		[TWE-001L-DIC-WA]_x1(37x19基板)_デバッグ用に2個購入
			(PC側は[TWE-Lite-USB])
3軸ジャイロセンサ[AE-L3GD20]_x1(12x12基板)
3軸加速度センサ	[ADXL345]_x1(19x14基板)
シリアル-SPI変換モジュール
		SC16IS750搭載I2C/SPI_x1(12x14基板)
		在庫がないのでR1350N搭載ジャイロシールドを購入し改造
EEPROM		[24C512]_x1(1.0x0.9)
NOT回路		[TC74ACT14FT]
変換基板	[TSOP18ピン変換基板AE-TSOP-2]
紙基板
ユニバーサル基板
	両面スルホール・ガラス・ユニバーサル基板Ａタイプ
	２．５４ｍｍピッチ（１５５ｘ１１４ｍｍ）
■可動部
プロペラ	[CF3222ADP,U80N2]_x6
			(ギヤユニット[GB05など])
モータ		[MK07-3.3]_x6
■筐体(上記入手後ハンズで購入)
t=2mmシナ共芯合板
Dremel万能ルーター(TRIO)
モーター固定用Oリング
プラスチックなべ小ネジ

////////////////////
2014.08.03
モータドライバ[TB6593FNG]よさそう．秋月で買えないけどマルツにはある．
ピンピッチが細かいので変換基板をかませる
[【TB6593FNG(O.EL)】ブラシ付きモータドライバIC ]
[【D020】変換基板(20ピン・SSOP/SOP・5枚) ]

////////////////////
2014.08.02
モーターが逆回転できるか試さないとまずい．
-
モータードライバ3~3.7Vで動くやつある？TIのDRV8832が良さそう．秋月で買えるし．
DRV8830ならI2Cで指定できる．6chあるから通信ディレイがデカそう．却下．
PWM入力は反転して２入力にしないといけない．NOT回路6個入り準備[TC74ACT14FT]
ダメだ，データシート見るとPWM入力じゃなくて，
H-L入力の時に定速正転，逆で逆転，ブレーキ，惰性の4パターンしか出せないっぽい．
速度はVset端子電圧で決まるから，DA出力+正・逆をポート制御？あまりにも．．．
[TB6552FN/TC78H610FNG]ON抵抗がかなり高い．[TB6593FNG]いける？要確認
-
筐体は厚紙やパルプ．ベニヤ等の素材を切って試作．最終的には3Dプリンタ？
東急ハンズで見たところ2mm厚シナ共芯合板が良さそう．塩ビ板より軽くて曲がりにくい．
万能ルーターってやつで切れば試作レベルの加工はできそう．要実験．
モーターはゴムのOリングで切込みを入れた合板と巻きつける．
合板同士はプラスチックなべ小ネジで組み付け．
-
最終的にカメラを載せるかも．最初は載せない．
まずは形にすることを優先し，難易度の高いものは後回し．重いし．
-
最終基板はEagleで書く．(macでできる&オープンソースハードの定番っぽい&100x80に収まる)
暫定回路図もそれを見越してEagleで書く
h8は変換基板に載せる？FLASH書き換え回数増えるとデバイスだけ載せ替えたいかも．

////////////////////
2014.07.30
クワッドコプター購入．[4ch マルチコプター R/C スパイダー 赤]
プロペラが意外と小さい，が，かなり軽い．本体の筐体も無駄がなくて軽い．
軽さが一番重要そう
FR4,2層貫通基板
各モーターには2本の線が接続されている.
1本は共通(電源),マイナス側をNchFETで引っ張ってる
NchFET(BSS123?)x4でモータ駆動
無線2.4GHzトランシーバはA7105,基板上にアンテナパターンを形成.
リポバッテリーは3.7V240mAh,モータ駆動も3.7Vでしてる．
モーターはコアレスモータ？小さくて良さそう．
モータドライバでPWM制御(FETだと逆回転できない)
直結は効率が悪いらしいからギヤユニットをかませて作る?
	indoor airplane world e-shopで購入可能
	コアレスモータ[MK07-3.3]
	ギヤ[G209-071,G260]ギヤユニット[GB05など]を使用．実験して必要に応じて使用
	プロペラ[CF3222ADP,U80N2]
	電源[リチウムポリマーバッテリー3.7Vx1]
		マイコン直結(3.3V動作可能)
	マイコンはボードだと重いので[h8+QFP/TQFP100ピン変換基板]+紙基板


////////////////////
2014.07.29
自立飛行なら近接センサが必要
各プロペラに1セットずつ外側に向けて配置
シャープ測距モジュールが使いやすそう[GP2Y0A21YK]
6軸を監視しないと6軸移動できる意味が無いので3軸加速度+3軸ジャイロを載せる
秋月のラインナップから下記部品が買いやすい
EEPROMにパラメータを記憶する→自己学習みたいなことができるか.
DRAMにセンサデータを格納し，モニタしながら制御方法を検討

////////////////////
2014.07.28
着想：
H8マイコンを利用してラジコン的なアクチュエータを制御する物を作りたいと思っていた．
タイヤはありきたりだし，水に入れるのは実験が面倒なので空を飛ばすのが良さそう．
クワッドコプターは結構製品化されて性能が出ているが，もっとプロペラを増やして自在に動かしたい，

構想：
全軸(6軸)に移動可能にする．シンプルに考えるとXYZとそれぞれの回転方向で2個ずつプロペラをつけ，
全12個を使用すると良さそうだがあまりにも多い．
例えばZ軸移動とY軸の回転方向は共通のプロペラでできそう(X軸端にZ軸を中心とするプロペラを2個)．
そこで計6個のプロペラで6軸移動が可能になりそうと考えた．
デバッグや指示出し用に無線で双方向通信ができると便利．
Xbee(zigbee?)が秋月にもあって使いやすそう．
XbeeエクスプローラUSBドングルってのでPCから拾えそう
